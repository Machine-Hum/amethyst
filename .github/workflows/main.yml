name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:

  codechecks:
    name: Code Checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
        toolchain: [stable, beta, nightly]
        include:
        - os: macos-latest
          FEATURES: metal
        - os: windows-latest
          FEATURES: vulkan
        - os: ubuntu-latest
          FEATURES: vulkan
          RUSTC_WRAPPER: /usr/bin/sccache

    steps:
      - uses: actions/checkout@v2

      - name: install linux deps
        run: |
          sudo apt update
          sudo apt install gcc pkg-config openssl libasound2-dev cmake build-essential python3 libfreetype6-dev libexpat1-dev libxcb-composite0-dev libssl-dev libx11-dev sccache
        if: contains(matrix.os, 'ubuntu')

      - name: install ${{ matrix.toolchain }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=${{matrix.FEATURES}}
        if: contains(matrix.toolchain, 'stable')

      - name: run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features=${{matrix.FEATURES}}
